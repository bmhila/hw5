import pathlib
import pandas as pd
import numpy as np
from typing import Union
import json
import matplotlib.pyplot as plt
import re
from typing import Tuple


class QuestionnaireAnalysis:
    """
    Reads and analyzes data generated by the questionnaire experiment.
    Should be able to accept strings and pathlib.Path objects.
    """

    def __init__(self, data_fname: Union[pathlib.Path, str]):
        self.data_fname = data_fname 
        self.data = pd.DataFrame()

    def read_data(self):
        """Reads the json data located in self.data_fname into memory, to
        the attribute self.data.
        """
        with open(self.data_fname) as f:
            self.data = pd.DataFrame(json.load(f))
        self.data.replace(['None', 'nan'], np.nan, inplace=True)

    def show_age_distrib(self) -> Tuple[np.ndarray, np.ndarray]:
        """Calculates and plots the age distribution of the participants.

        Returns
        -------
        hist : np.ndarray
        Number of people in a given bin
        bins : np.ndarray
        Bin edges
        """
        QuestionnaireAnalysis.read_data(self)
        self.data.hist(column='age', bins = 10, range=(0,100))
        plt.show()
        hist, bins = np.histogram(self.data['age'], bins = 10, range=(0,100))
        agetup = (hist,bins)
        return (agetup)
        

    def remove_rows_without_mail(self) -> pd.DataFrame:
        """Checks self.data for rows with invalid emails, and removes them.

        Returns
        -------
        df : pd.DataFrame
        A corrected DataFrame, i.e. the same table but with the erroneous rows removed and
        the (ordinal) index after a reset.
        """
        QuestionnaireAnalysis.read_data(self)
        df = self.data[(self.data['email'].str.contains('@') & (self.data['email'].str.contains('.')) == True)]
        df.reset_index(inplace = True)
        return (df)

    def fill_na_with_mean(self) -> Tuple[pd.DataFrame, np.ndarray]:
    """Finds, in the original DataFrame, the subjects that didn't answer
    all questions, and replaces that missing value with the mean of the
    other grades for that student.

    Returns
    -------
    df : pd.DataFrame
    The corrected DataFrame after insertion of the mean grade
    arr : np.ndarray
    Row indices of the students that their new grades were generated
    """
        

if __name__ == "__main__":
    myfile = QuestionnaireAnalysis('C:/Dev/hw5/data.json')
    #myfile.read_data()
    #myfile.show_age_distrib()
    #myfile.remove_rows_without_mail()
    myfile.fill_na_with_mean()